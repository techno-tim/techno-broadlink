name: CI for releases

on:
  push:
    branches:
      - master

jobs:
  js-install-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [v18.12.1]  
    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # 3.0.2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies, Test, and Build
      run: |
        cd frontend
        yarn install --frozen-lockfile --check-files
        yarn lint
        GENERATE_SOURCEMAP=false yarn build
        ls -R
      env:
        GENERATE_SOURCEMAP: false
        CI: true
    - name: Upload ReactJS Build
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # 3.1.0
      with:
        name: build
        path: frontend/build/

  python-install-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8.5]
    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # 3.0.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 #4.0.2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        cd api
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest

  build-and-push-docker-image:
    needs: [js-install-and-test, python-install-and-test]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # 3.0.2

      -
        name: Show structure
        run: |
          ls -R
      -
        name: Make a dir for ReactJS artifacts
        run: |
          cd frontend
          mkdir build
          cd ..
      - 
        name: Download ReactJS artifacts from JS Build
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 #3 .0.0
        with:
          name: build
          path: frontend/build
      -
        name: Show structure of downloaded files
        run: |
          ls -R
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # 2.0.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # 2.0.0
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # 2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
      -
        name: Build and push
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # 3.1.1
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/386
          push: true
          tags: | 
            timothystewart6/techno-broadlink:latest
            ghcr.io/techno-tim/techno-broadlink:latest